---
# yamllint disable rule:line-length
name: CI

"on":
  push:
    branches: "main"
  pull_request:
    branches: "main"

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v6.7.0
        with:
          enable-cache: true
          python-version: "3.12"
          # Avoid post-job cache pruning failures on self-hosted runners
          # Keep pruning on GitHub-hosted runners
          prune-cache: ${{ runner.environment == 'github-hosted' }}
      - name: Install Python 3.12 with uv
        run: uv python install 3.12
      - run: uv sync --group dev --frozen
      - name: Cache pre-commit
        if: ${{ runner.environment == 'github-hosted' }}
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.cache/pre-commit
          key: >-
            pre-commit-${{ runner.os }}-${{
            hashFiles('.pre-commit-config.yaml') }}
          restore-keys: pre-commit-${{ runner.os }}-
      - run: uv run pre-commit run --all-files

  test:
    needs: [lint]
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v6.7.0
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}
          # Avoid post-job cache pruning failures on self-hosted runners
          # Keep pruning on GitHub-hosted runners
          prune-cache: ${{ runner.environment == 'github-hosted' }}
      - name: Install Python ${{ matrix.python-version }} with uv
        run: uv python install ${{ matrix.python-version }}
      - run: uv sync --group test --frozen
        shell: bash
      - run: uv run pytest
        shell: bash

  all-checks:
    name: All Checks
    needs: [lint, test]
    if: ${{ always() }}
    runs-on: [self-hosted, linux]
    steps:
      - name: All's green?
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
